{"version":3,"sources":["components/navbar/Navbar.jsx","components/jumbotorn/jumbotorn.jsx","components/form/Form.jsx","components/toDoList/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","state","className","href","clasName","Component","Jumbotorn","role","class","Form","type","this","props","inputErrors","id","placeholder","name","value","toDo","onChange","onClick","handleAdd","ToDoList","toDos","map","test","completed","handleCompleted","handleRemove","App","timeStamp","Date","now","e","preventDefault","validator","isEmpty","setState","toDoInputErr","length","target","toDoObject","currentTarget","getAttribute","console","log","indexOfToDoObject","indexOf","copyOfCompletedToDo","newToDoList","splice","handleEdit","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20958a23.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./navbar.css\";\nclass Navbar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">\n          My Portfolio\n        </a>\n        <div clasName=\"float-right\">v</div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./jumbotorn.css\";\nclass Jumbotorn extends Component {\n  state = {};\n  render() {\n    return (\n      <div role=\"main\" className=\"container\">\n        <div className=\"jumbotron\">\n          <h1>Simple To-DO App</h1>\n          <p className=\"lead\">\n            This app is built with React.js library. Learned how to lift up\n            state, javascript es6 functions like map and filter arrays. This app\n            also uses npm package called validator to validate user input and\n            bootstrap validation classes to display input errors\n          </p>\n          <a\n            class=\"btn btn-md btn-primary\"\n            href=\"../../components/navbar/\"\n            role=\"button\"\n          >\n            View Source Code\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Jumbotorn;\n","import React, { Component } from \"react\";\nimport \"./form.css\";\n\nclass Form extends Component {\n  render() {\n    return (\n      <form className=\"todoForm\">\n        {/* <div className=\"col-md-5\"> */}\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className={\n              this.props.inputErrors\n                ? \"form-control is-invalid inputToDo\"\n                : \"form-control inputToDo\"\n            }\n            id=\"autoSizingInputGroup\"\n            placeholder=\"Enter a to do item\"\n            name=\"toDoItem\"\n            value={this.props.toDo}\n            onChange={this.props.onChange}\n          />\n          <button\n            className=\"btn btn-warning btnAddAndRemove\"\n            onClick={this.props.handleAdd}\n          >\n            +\n          </button>\n        </div>\n        <div className=\"invalid-feedback d-block\">{this.props.inputErrors}</div>\n        {/* </div> */}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./toDoList.css\";\n\nclass ToDoList extends Component {\n  render() {\n    //Destructuring\n    const listOfTodos = this.props.toDos.map(toDo => {\n      return (\n        <div className=\"toDosLists\" key={toDo.id} test=\"100\">\n          <div className=\"input-group\">\n            <div\n              type=\"text\"\n              className={\n                toDo.completed\n                  ? \"form-control form-control-completed\"\n                  : \"form-control\"\n              }\n              id=\"autoSizingInputGroup\"\n            >\n              {toDo.toDo}\n            </div>\n            <button\n              id={toDo.id}\n              className=\"btn btn-success btnAddAndRemove\"\n              onClick={this.props.handleCompleted}\n            >\n              <i className=\"fa fa-check-square\"></i>\n            </button>\n\n            <button\n              id={toDo.id}\n              className=\"btn btn-danger btnAddAndRemove\"\n              onClick={this.props.handleRemove}\n            >\n              <i className=\"fa fa-trash\"></i>\n            </button>\n          </div>\n        </div>\n      );\n    });\n    return listOfTodos;\n  }\n}\n\nexport default ToDoList;\n","import React, { Component } from \"react\";\nimport validator from \"validator\";\nimport Navbar from \"./components/navbar/Navbar.jsx\";\nimport Jumbotorn from \"./components/jumbotorn/jumbotorn\";\nimport Form from \"./components/form/Form\";\nimport ToDoList from \"./components/toDoList/ToDoList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toDo: \"\",\n      toDos: [],\n      toDoInputErr: null\n    };\n  }\n\n  //const\n  timeStamp = Date.now();\n\n  //functions\n  handleAdd = e => {\n    e.preventDefault();\n\n    //Validating\n    if (validator.isEmpty(this.state.toDo)) {\n      this.setState({ toDoInputErr: \"Please enter an item\" });\n    } else {\n      this.setState({ toDoInputErr: null, toDo: \"\" });\n      //Setting id\n      const id =\n        this.state.toDos.length === 0\n          ? 1\n          : this.state.toDos[this.state.toDos.length - 1].id + 1;\n      this.setState({\n        toDos: [\n          ...this.state.toDos,\n          { toDo: this.state.toDo, id: id, completed: false }\n        ]\n      });\n    }\n  };\n\n  //Onchange\n  onChange = e => {\n    this.setState({ toDo: e.target.value });\n  };\n\n  //Handle completed\n  handleCompleted = e => {\n    const id = e.currentTarget.getAttribute(\"id\");\n    console.log(\"clicked id is \", id);\n    let toDoObject;\n    this.state.toDos.map(toDo => {\n      if (toDo.id == id) {\n        toDoObject = toDo;\n      }\n      console.log(\" to do object \" + toDoObject);\n    });\n\n    const indexOfToDoObject = this.state.toDos.indexOf(toDoObject);\n    console.log(\"Index of to do object \" + indexOfToDoObject);\n    let copyOfCompletedToDo = this.state.toDos[indexOfToDoObject];\n    copyOfCompletedToDo.completed = !this.state.toDos[indexOfToDoObject]\n      .completed;\n    console.log(copyOfCompletedToDo);\n    const newToDoList = [...this.state.toDos];\n    newToDoList.splice(indexOfToDoObject, 1, copyOfCompletedToDo);\n    this.setState({ toDos: newToDoList });\n  };\n\n  //Handle edit\n  handleEdit = () => {\n    console.log(\"Editing .. \");\n  };\n\n  //Handle Delte\n  handleRemove = e => {\n    const id = e.currentTarget.getAttribute(\"id\");\n    this.setState({\n      toDos: this.state.toDos.filter(toDo => toDo.id != id)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Jumbotorn />\n\n        <div className=\" col-md-5 mx-auto\">\n          <Form\n            handleAdd={this.handleAdd}\n            onChange={this.onChange}\n            inputErrors={this.state.toDoInputErr}\n            toDo={this.state.toDo}\n          />\n          <ToDoList\n            toDos={this.state.toDos}\n            handleCompleted={this.handleCompleted}\n            handleEdit={this.handleEdit}\n            handleRemove={this.handleRemove}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}